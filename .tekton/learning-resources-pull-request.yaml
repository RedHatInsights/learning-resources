apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/RedHatInsights/learning-resources?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "pull_request" && target_branch
      == "master"
    pipelinesascode.tekton.dev/pipeline: https://github.com/catastrophe-brandon/konflux-pipelines/raw/btweed/platform-ui-e2e/pipelines/platform-ui/docker-build-run-all-tests.yaml
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: learning-resources
    appstudio.openshift.io/component: learning-resources
    pipelines.appstudio.openshift.io/type: build
  name: learning-resources-on-pull-request
  namespace: hcc-platex-services-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/hcc-platex-services-tenant/learning-resources/learning-resources:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: dockerfile
    value: build-tools/Dockerfile
  - name: path-context
    value: .
  - name: unit-tests-script
    value: |
      #!/bin/bash
      set -ex
      
      npm install
      npm run lint
      # npm test --  --runInBand --no-cache
  - name: e2e-tests-script
    value: |
      #!/usr/bin/env bash
      set -ex
      echo "Skipping tests"
#      npm i >/dev/null 2>&1
#      KONFLUX_RUN=1 npm run start:konflux &
#      until curl -k 'https://stage.foo.redhat.com:1337' > /dev/null 2>&1; do
#        echo "Waiting for dev server to be ready"
#        sleep 5
#      done
#      echo "Dev server ready!"
#      KONFLUX_RUN=1 NO_COLOR=1 E2E_USER=$CHROME_ACCOUNT E2E_PASSWORD=$CHROME_PASSWORD npm run test:konflux
  pipelineRef:
    name: docker-build
  taskRunTemplate:
    serviceAccountName: build-pipeline-learning-resources
    podTemplate:
      hostAliases:
        # Webpack explicitly binds to this address; don't remove or change this without careful consideration
        - ip: "127.0.0.1"
          hostnames:
            - "stage.foo.redhat.com"
            - "prod.foo.redhat.com"
  workspaces:
  - name: workspace
    volumeClaimTemplate:
      metadata:
        creationTimestamp: null
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status: {}
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}